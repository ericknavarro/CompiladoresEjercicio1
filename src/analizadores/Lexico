/*
 * Ejemplo desarrollado por Erick Navarro
 * Blog: e-navarro.blogspot.com
 * Julio - 2018
 */

package analizadores;
import java_cup.runtime.Symbol; 

%% 
%class Lexico
%public 
%line 
%char 
%cup 
%unicode
%ignorecase

%init{ 
    yyline = 1; 
    yychar = 1; 
%init} 
 
BLANCOS=[ \r\t]+
CADENACOMILLASDOBLES = [\"]([^\"\n]|(\\\"))*[\"]
D=[0-9]+
DD=[0-9]+("."[  |0-9]+)?
ID=[A-Za-z]+["_"0-9A-Za-z]*
COMENTUNILINEA =("//".*\r\n)|("//".*\n)|("//".*\r)
COMENTMULTILINEA ="/*""/"*([^*/]|[^*]"/"|"*"[^/])*"*"*"*/"
%%

{COMENTUNILINEA} {} 
{COMENTMULTILINEA} {}  
{CADENACOMILLASDOBLES} {return new Symbol(sym.CADENA,yyline,yychar, (yytext()).substring(1,yytext().length()-1));} 

"Print" {return new Symbol(sym.RPRINT,yyline,yychar, yytext());} 
"Declare" {return new Symbol(sym.RDECLARE,yyline,yychar, yytext());} 
"Number" {return new Symbol(sym.RNUMBER,yyline,yychar, yytext());} 
"String" {return new Symbol(sym.RSTRING,yyline,yychar, yytext());}
"Boolean" {return new Symbol(sym.RBOOLEAN,yyline,yychar, yytext());}
"Not" {return new Symbol(sym.RNOT,yyline,yychar, yytext());} 
"And" {return new Symbol(sym.RAND,yyline,yychar, yytext());} 
"Or" {return new Symbol(sym.ROR,yyline,yychar, yytext());} 
"True" {return new Symbol(sym.RTRUE,yyline,yychar, yytext());} 
"False" {return new Symbol(sym.RFALSE,yyline,yychar, yytext());} 

";" {return new Symbol(sym.PTCOMA,yyline,yychar, yytext());} 
"(" {return new Symbol(sym.PARIZQ,yyline,yychar, yytext());} 
")" {return new Symbol(sym.PARDER,yyline,yychar, yytext());} 
"+" {return new Symbol(sym.MAS,yyline,yychar, yytext());} 
"-" {return new Symbol(sym.MENOS,yyline,yychar, yytext());} 
"*" {return new Symbol(sym.POR,yyline,yychar, yytext());} 
"/" {return new Symbol(sym.DIVIDIDO,yyline,yychar, yytext());} 
"&" {return new Symbol(sym.CONCAT,yyline,yychar, yytext());} 
"<>" {return new Symbol(sym.DIFQUE,yyline,yychar, yytext());} 
"==" {return new Symbol(sym.IGUALQUE,yyline,yychar, yytext());} 
"<=" {return new Symbol(sym.MENIGUALQUE,yyline,yychar, yytext());} 
">=" {return new Symbol(sym.MAYIGUALQUE,yyline,yychar, yytext());} 
"<" {return new Symbol(sym.MENQUE,yyline,yychar, yytext());} 
">" {return new Symbol(sym.MAYQUE,yyline,yychar, yytext());} 
"=" {return new Symbol(sym.IGUAL,yyline,yychar, yytext());} 
"," {return new Symbol(sym.COMA,yyline,yychar, yytext());} 

\n {yychar=1;}

{BLANCOS} {} 
{ID} {return new Symbol(sym.IDENTIFICADOR,yyline,yychar, yytext());} 
{D} {return new Symbol(sym.ENTERO,yyline,yychar, yytext());} 
{DD} {return new Symbol(sym.DECIMAL,yyline,yychar, yytext());} 

. {
    System.err.println("Este es un error lexico: "+yytext()+", en la linea: "+yyline+", en la columna: "+yychar);
}